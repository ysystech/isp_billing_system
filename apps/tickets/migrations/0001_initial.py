# Generated by Django 5.2.2 on 2025-06-28 08:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer_installations', '0004_alter_customerinstallation_status'),
        ('customers', '0006_add_geolocation_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ticket_number', models.CharField(editable=False, help_text='Auto-generated ticket number', max_length=20, unique=True)),
                ('title', models.CharField(help_text='Brief description of the issue', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the issue')),
                ('category', models.CharField(choices=[('no_connection', 'No Internet Connection'), ('slow_connection', 'Slow Internet Speed'), ('intermittent', 'Intermittent Connection'), ('router_issue', 'Router/Equipment Problem'), ('billing', 'Billing Inquiry'), ('relocation', 'Relocation Request'), ('upgrade', 'Plan Upgrade Request'), ('downgrade', 'Plan Downgrade Request'), ('other', 'Other')], default='other', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('source', models.CharField(choices=[('phone', 'Phone Call'), ('messenger', 'Facebook Messenger'), ('walk_in', 'Walk-in'), ('email', 'Email'), ('sms', 'SMS'), ('other', 'Other')], default='phone', max_length=20)),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When the ticket was resolved', null=True)),
                ('resolution_notes', models.TextField(blank=True, help_text='Notes about how the issue was resolved')),
                ('assigned_to', models.ForeignKey(blank=True, help_text='Technician assigned to resolve the ticket', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_assigned', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to='customers.customer')),
                ('customer_installation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to='customer_installations.customerinstallation')),
                ('reported_by', models.ForeignKey(help_text='Staff member who created the ticket', on_delete=django.db.models.deletion.PROTECT, related_name='tickets_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField()),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tickets.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ticket_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['status', 'priority'], name='tickets_tic_status_b256f6_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['customer', '-created_at'], name='tickets_tic_custome_3bafbd_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['assigned_to', 'status'], name='tickets_tic_assigne_e36302_idx'),
        ),
    ]
